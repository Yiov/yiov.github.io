import{_ as u,r as c,o as l,c as k,a as n,b as s,d as a,w as p,e as o}from"./app-8802896f.js";const i="/assets/qinglong-01-5cc8694e.png",r="/assets/qinglong-02-95d7b15c.png",d="/assets/qinglong-03-9ebf2ae7.png",y="/assets/qinglong-04-70682054.png",m="/assets/qinglong-05-2b95d547.png",g="/assets/qinglong-06-1018a253.png",h="/assets/qinglong-07-096375b5.png",f="/assets/qinglong-08-42c81259.png",w="/assets/qinglong-09-ee9460b9.png",v="/assets/qinglong-10-8fb4ba93.png",b="/assets/qinglong-11-e35d2ef8.png",q="/assets/qinglong-12-c94a00a5.png",x="/assets/qinglong-13-59481164.png",_="/assets/qinglong-14-c2664826.png",S="/assets/qinglong-15-7d75cfa0.png",j="/assets/qinglong-16-207696f2.png",$={},C=o('<h1 id="青龙面板的安装及使用" tabindex="-1"><a class="header-anchor" href="#青龙面板的安装及使用" aria-hidden="true">#</a> 青龙面板的安装及使用</h1><div class="custom-container warning"><p class="custom-container-title">更新时间</p><p>最近更新：2021-11-24</p></div><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2>',3),N={href:"https://github.com/whyour/qinglong",target:"_blank",rel:"noopener noreferrer"},E={href:"https://hub.docker.com/r/whyour/qinglong",target:"_blank",rel:"noopener noreferrer"},O={href:"https://t.me/jiao_long",target:"_blank",rel:"noopener noreferrer"},J=n("h2",{id:"准备条件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#准备条件","aria-hidden":"true"},"#"),s(" 准备条件")],-1),F=o(`<h2 id="_1-安装" tabindex="-1"><a class="header-anchor" href="#_1-安装" aria-hidden="true">#</a> 1.安装</h2><h3 id="_1-1-配置国内源镜像" tabindex="-1"><a class="header-anchor" href="#_1-1-配置国内源镜像" aria-hidden="true">#</a> 1.1 配置国内源镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker
<span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">&#39;EOF&#39;
{
  &quot;registry-mirrors&quot;: [
    &quot;https://0b27f0a81a00f3560fbdc00ddd2f99e0.mirror.swr.myhuaweicloud.com&quot;,
    &quot;https://ypzju6vq.mirror.aliyuncs.com&quot;,
    &quot;https://registry.docker-cn.com&quot;,
    &quot;http://hub-mirror.c.163.com&quot;,
    &quot;https://docker.mirrors.ustc.edu.cn&quot;
  ]
}
EOF</span>
systemctl daemon-reload
systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+i+`" alt=""></p><h3 id="_1-2-拉取青龙镜像" tabindex="-1"><a class="header-anchor" href="#_1-2-拉取青龙镜像" aria-hidden="true">#</a> 1.2 拉取青龙镜像</h3><div class="custom-container tip"><p class="custom-container-title">说明</p><p>不拉也行，起容器的时候也会自动拉取</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span>
<span class="token function">docker</span> pull whyour/qinglong:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+`" alt=""></p><h3 id="_1-3-创建青龙容器" tabindex="-1"><a class="header-anchor" href="#_1-3-创建青龙容器" aria-hidden="true">#</a> 1.3 创建青龙容器</h3><p>第一个5700是映射端口可以改，第二个5700是监听端口不要动</p><div class="custom-container tip"><p class="custom-container-title">端口修改</p><p>比如改成：<code>-p 5600:5700</code></p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-dit</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">-v</span> <span class="token environment constant">$PWD</span>/ql/data:/ql/data <span class="token punctuation">\\</span>
  <span class="token parameter variable">-p</span> <span class="token number">5700</span>:5700 <span class="token punctuation">\\</span>
  <span class="token parameter variable">--name</span> qinglong <span class="token punctuation">\\</span>
  <span class="token parameter variable">--hostname</span> qinglong <span class="token punctuation">\\</span>
  <span class="token parameter variable">--restart</span> unless-stopped <span class="token punctuation">\\</span>
  whyour/qinglong:latest
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+d+`" alt=""></p><h3 id="_1-4-重启防火墙和放行端口" tabindex="-1"><a class="header-anchor" href="#_1-4-重启防火墙和放行端口" aria-hidden="true">#</a> 1.4 重启防火墙和放行端口</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+y+'" alt=""></p><p>放行5700端口</p>',17),D={class:"custom-container tip"},L=n("p",{class:"custom-container-title"},"说明",-1),X=n("p",null,"如果你映射端口改了还需要放行映射的端口",-1),T=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">5700</span>/tcp <span class="token parameter variable">--permanent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">5700</span>/tcp <span class="token parameter variable">--permanent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+m+'" alt=""></p><h3 id="_1-5访问青龙面板" tabindex="-1"><a class="header-anchor" href="#_1-5访问青龙面板" aria-hidden="true">#</a> 1.5访问青龙面板</h3><p>访问青龙面板：<code>http://你的公网ip:端口</code></p>',5),R={class:"custom-container tip"},P=n("p",{class:"custom-container-title"},"说明",-1),Q={href:"http://192.168.1.1:5700",target:"_blank",rel:"noopener noreferrer"},M=o('<p><img src="'+g+'" alt=""></p><p>开始安装-设置账户密码-提交</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p>通知可以先跳过，之后再添加，完成即可</p></div><p><img src="'+h+'" alt=""></p><p>登录青龙，进入青龙前端</p><p><img src="'+f+'" alt=""></p><p><img src="'+w+`" alt=""></p><h3 id="_1-6-其他命令" tabindex="-1"><a class="header-anchor" href="#_1-6-其他命令" aria-hidden="true">#</a> 1.6 其他命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 更新并重启青龙</span>
ql update
<span class="token comment"># 查看日志</span>
<span class="token function">docker</span> logs <span class="token parameter variable">-f</span> qinglong                                                    
<span class="token comment"># 运行自定义脚本extra.sh</span>
ql extra                                                     
<span class="token comment"># 添加单个脚本文件</span>
ql raw <span class="token operator">&lt;</span>file_url<span class="token operator">&gt;</span>                                             
<span class="token comment"># 添加单个仓库的指定脚本</span>
ql repo <span class="token operator">&lt;</span>repo_url<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>whitelist<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>blacklist<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>dependence<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>extensions<span class="token operator">&gt;</span>
<span class="token comment"># 删除旧日志</span>
ql rmlog <span class="token operator">&lt;</span>days<span class="token operator">&gt;</span>                                              
<span class="token comment"># 启动tg-bot</span>
ql bot                                                       
<span class="token comment"># 检测青龙环境并修复</span>
ql check                                                     
<span class="token comment"># 重置登录错误次数</span>
ql resetlet                                                  
<span class="token comment"># 禁用两步登录</span>
ql resettfa                                                  

<span class="token comment"># 依次执行，如果设置了随机延迟，将随机延迟一定秒数</span>
task <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span>                                             
<span class="token comment"># 依次执行，无论是否设置了随机延迟，均立即运行，前台会输出日，同时记录在日志文件中</span>
task <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span> now                                         
<span class="token comment"># 并发执行，无论是否设置了随机延迟，均立即运行，前台不产生日，直接记录在日志文件中，且可指定账号执行</span>
task <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span> conc <span class="token operator">&lt;</span>env_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>account_number<span class="token operator">&gt;</span><span class="token punctuation">(</span>可选的<span class="token punctuation">)</span> 
<span class="token comment"># 指定账号执行，无论是否设置了随机延迟，均立即运行 </span>
task <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span> desi <span class="token operator">&lt;</span>env_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>account_number<span class="token operator">&gt;</span>         

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用" aria-hidden="true">#</a> 2.使用</h2><h3 id="_2-1-拉库" tabindex="-1"><a class="header-anchor" href="#_2-1-拉库" aria-hidden="true">#</a> 2.1 拉库</h3><p>右上角，添加任务</p><p><img src="`+v+`" alt=""></p><p>拉取库脚本文件，就用faker的京东脚本演示</p><p>faker3内部互助版</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ql repo https://ghproxy.com/https://github.com/shufflewzc/faker3.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot; &quot;main&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">说明</p><p>这里添加后先禁用，了解 <a href="#_3-2-cron%E5%AE%9A%E6%97%B6%E8%A7%84%E5%88%99">cron定时规则</a> 再来改</p></div><p><img src="`+b+'" alt=""></p><p>确定好之后，点确定，之后运行，等待一会再刷新</p><p><img src="'+q+'" alt=""></p><p>多等一会，以免有些脚本没有加载</p><p><img src="'+x+`" alt=""></p><h3 id="_2-2-安装依赖" tabindex="-1"><a class="header-anchor" href="#_2-2-安装依赖" aria-hidden="true">#</a> 2.2 安装依赖</h3><p>安装 <code>Nodejs</code> ，自动拆分 <code>是</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>png-js
@types/node  
require
typescript
crypto-js
prettytable
dotenv
jsdom
date-fns
tough-cookie
tslib
ws@7.4.3
ts-md5
jsdom -g
jieba
fs
form-data
json5
global-agent 
png-js
@types/node  
require
typescript
js-base64
axios
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_+`" alt=""></p><p>安装 <code>Python3</code> 我是直接失败的，实在想装参考下面步骤</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p><code>qinglong</code> 为容器名</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> qinglong <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-sS</span> https://bootstrap.pypa.io/get-pip.py <span class="token operator">|</span> python3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后再执行下列依赖即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>requests
canvas
ping3
jieba
PyExecJS
aiohttp
json5
pycryptodomex
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Linux</code> 安装也很简单</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bizCode
bizMsg  
lxml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-环境变量" tabindex="-1"><a class="header-anchor" href="#_2-3-环境变量" aria-hidden="true">#</a> 2.3 环境变量</h3><p>京东的话，这里就是添加CK账号；其他APP就按脚本说明来</p>`,36),A={class:"custom-container tip"},U=n("p",{class:"custom-container-title"},"注意",-1),B=n("p",null,"注：用Nvjdc(现已更名为方舟)可以不用抓",-1),K=o(`<p>添加变量-名称输入 <code>JD_COOKIE</code> ，值输入账号CK</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>JD_COOKIE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+S+'" alt=""></p><p>这样就是添加成功了</p><p><img src="'+j+`" alt=""></p><h2 id="_3-其他拓展" tabindex="-1"><a class="header-anchor" href="#_3-其他拓展" aria-hidden="true">#</a> 3.其他拓展</h2><h3 id="_3-1-运行指令" tabindex="-1"><a class="header-anchor" href="#_3-1-运行指令" aria-hidden="true">#</a> 3.1 运行指令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 并发</span>
task ***.js conc JD_COOKIE
<span class="token comment"># 指定运行</span>
task ***.js desi JD_COOKIE <span class="token number">1</span>-31
<span class="token comment"># 更新面板</span>
ql update
<span class="token comment"># 删除日志</span>
ql rmlog <span class="token number">7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-cron定时规则" tabindex="-1"><a class="header-anchor" href="#_3-2-cron定时规则" aria-hidden="true">#</a> 3.2 Cron定时规则</h3><p>青龙默认定时规则为5组数字，秒为可选项目，不填</p><table><thead><tr><th><strong>分</strong></th><th><strong>时</strong></th><th><strong>天（日）</strong></th><th><strong>月</strong></th><th><strong>周</strong></th></tr></thead><tbody><tr><td>0-59</td><td>0-23</td><td>1-31</td><td>1-12</td><td>0-7</td></tr></tbody></table><p>注：周里的0和7都代表星期天</p><p>而常用的特殊符号表达式，是最关键的了</p><table><thead><tr><th>*</th><th><strong>,</strong></th><th><strong>-</strong></th><th><strong>/</strong></th></tr></thead><tbody><tr><td>代表所有时间段</td><td>分隔时段</td><td>时间范围</td><td>每个单位间隔</td></tr></tbody></table><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>* 例子1：0 */2 8 8 *

我们参照例子解读
分=0；时=*/2；天＝8；月＝8；周＝*；

解读：8月8号的所有时间段每隔2小时运行一次



* 例子2：0 0-22/8 * * *

我们参照例子解读
分=0；时=0-22/8；天＝*；月＝*；周＝*；

解读：每天的0-22点之间，每隔8小时运行一次



* 例子3：0 0,10,22 * * *

我们参照例子解读
分=0；时=0,10,22；天＝*；月＝*；周＝*；

解读：每天的0点，10点，22点，运行一次

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-青龙通知修改" tabindex="-1"><a class="header-anchor" href="#_3-3-青龙通知修改" aria-hidden="true">#</a> 3.3 青龙通知修改</h3><p>每个脚本运行完成后，通知下方会有一个链接</p><div class="custom-container tip"><p class="custom-container-title">通知</p><p><code>本通知 By：https://github.com/whyour/qinglong</code></p></div><p>路径 <code>/root/ql/scripts/sendNotify.js</code></p><p>右键-编辑，下滑找到，我们将n后面的修改成自己想要的即可</p><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> author = &#39;\\n\\n本通知 By：https://github.com/whyour/qinglong&#39;,
</span></span>
<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> author = &#39;\\n\\n 活动入口:&lt;a href=&quot;https://github.com/yiov&quot;&gt;https://github.com/yiov&lt;/a&gt;&#39;,
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-青龙多开容器" tabindex="-1"><a class="header-anchor" href="#_3-4-青龙多开容器" aria-hidden="true">#</a> 3.4 青龙多开容器</h3><p>文字部分，自己修改一下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-dit</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">-v</span> <span class="token environment constant">$PWD</span>/自定义目录不能与已有目录重名/data:/ql/data <span class="token punctuation">\\</span>
  <span class="token parameter variable">-p</span> 自定义青龙端口后面的不要改:5700 <span class="token punctuation">\\</span>
  <span class="token parameter variable">--name</span> 自定义的容器名不能与已有容器重名 <span class="token punctuation">\\</span>
  <span class="token parameter variable">--hostname</span> 上面自定义的容器名 <span class="token punctuation">\\</span>
  <span class="token parameter variable">--restart</span> unless-stopped <span class="token punctuation">\\</span>
  whyour/qinglong:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-自己写通知脚本" tabindex="-1"><a class="header-anchor" href="#_3-5-自己写通知脚本" aria-hidden="true">#</a> 3.5 自己写通知脚本</h3><ul><li>简单版本</li></ul><p>设定的message值等于空，推送的时候就会为空，如果你不设定message，通知就无法调起</p><p>我们可以设一个message值等于空，然后在引用message的时候，在后面添加想要的文字</p><p><code>\${message}\\n\\n 这里填想要的文字</code></p><p>注意：<code>\\n</code> 代表换行</p><details class="custom-container details"><summary>点击查看 简单代码</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*
这里是注释

cron 0 8 * * * jbm.js
*/</span>

<span class="token keyword">const</span> $ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Env</span><span class="token punctuation">(</span><span class="token string">&quot;这里填脚本名或其他&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> notify <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./sendNotify&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
message <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>


<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>


<span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token keyword">await</span> notify<span class="token punctuation">.</span><span class="token function">sendNotify</span><span class="token punctuation">(</span><span class="token string">&quot;这里是通知的标题&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n\\n 通知的内容 \\n代表换行</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>



<span class="token comment">//固定模板 不要动</span>
<span class="token keyword">function</span> <span class="token function">Env</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> process<span class="token operator">&amp;&amp;</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;GITHUB&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">s</span><span class="token punctuation">{</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token operator">=</span>t<span class="token punctuation">}</span><span class="token function">send</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span><span class="token string">&quot;string&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">?</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span>t<span class="token punctuation">;</span><span class="token keyword">let</span> s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>get<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">&quot;POST&quot;</span><span class="token operator">===</span>e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>post<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">s</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>t<span class="token operator">?</span><span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">class</span><span class="token punctuation">{</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">s</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token operator">=</span><span class="token string">&quot;box.dat&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isMute<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logSeparator<span class="token operator">=</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>startTime<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\ud83d\\udd14</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u5f00\\u59cb!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> module<span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token operator">!</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">}</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $task<span class="token punctuation">}</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $httpClient<span class="token operator">&amp;&amp;</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> $loon<span class="token punctuation">}</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $loon<span class="token punctuation">}</span><span class="token function">toObj</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">toStr</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">getjson</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> s<span class="token operator">=</span>e<span class="token punctuation">;</span><span class="token keyword">const</span> i<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span>s<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">return</span> s<span class="token punctuation">}</span><span class="token function">setjson</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setdata</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">getScript</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">runScript</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token string">&quot;@chavy_boxjs_userCfgs.httpapi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">=</span>i<span class="token operator">?</span>i<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>i<span class="token punctuation">;</span><span class="token keyword">let</span> r<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token string">&quot;@chavy_boxjs_userCfgs.httpapi_timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>r<span class="token operator">=</span>r<span class="token operator">?</span><span class="token number">1</span><span class="token operator">*</span>r<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>r<span class="token operator">=</span>e<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span>timeout<span class="token operator">?</span>e<span class="token punctuation">.</span>timeout<span class="token operator">:</span>r<span class="token punctuation">;</span><span class="token keyword">const</span><span class="token punctuation">[</span>o<span class="token punctuation">,</span>h<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>h<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/v1/scripting/evaluate</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">script_text</span><span class="token operator">:</span>t<span class="token punctuation">,</span><span class="token literal-property property">mock_type</span><span class="token operator">:</span><span class="token string">&quot;cron&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">timeout</span><span class="token operator">:</span>r<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Key&quot;</span><span class="token operator">:</span>o<span class="token punctuation">,</span><span class="token literal-property property">Accept</span><span class="token operator">:</span><span class="token string">&quot;*/*&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">s</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>i<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token keyword">const</span> i<span class="token operator">=</span>s<span class="token operator">?</span>t<span class="token operator">:</span>e<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">writedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">:</span>i<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">lodash_get</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>s</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> i<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[(\\d+)\\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;.$1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> r<span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> t <span class="token keyword">of</span> i<span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token function">Object</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>r<span class="token punctuation">)</span><span class="token keyword">return</span> s<span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token punctuation">}</span><span class="token function">lodash_set</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>s</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">Object</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">!==</span>t<span class="token operator">?</span>t<span class="token operator">:</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>e<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^.[\\]]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">Object</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">===</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">?</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">0</span><span class="token operator">==</span><span class="token operator">+</span>e<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">[</span>e<span class="token punctuation">[</span>e<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@(.*?)\\.(.*?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>e<span class="token operator">=</span>t<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token function">setdata</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> s<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>r<span class="token punctuation">]</span><span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@(.*?)\\.(.*?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>h<span class="token operator">=</span>i<span class="token operator">?</span><span class="token string">&quot;null&quot;</span><span class="token operator">===</span>o<span class="token operator">?</span><span class="token keyword">null</span><span class="token operator">:</span>o<span class="token operator">||</span><span class="token string">&quot;{}&quot;</span><span class="token operator">:</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">const</span> e<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_set</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>r<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> o<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_set</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>r<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> s<span class="token punctuation">}</span><span class="token function">getval</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$persistentStore<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$prefs<span class="token punctuation">.</span><span class="token function">valueForKey</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">||</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$persistentStore<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$prefs<span class="token punctuation">.</span><span class="token function">setValueForKey</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">writedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">||</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;got&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;tough-cookie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>cktough<span class="token punctuation">.</span>CookieJar</span><span class="token punctuation">,</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">?</span>t<span class="token punctuation">.</span>headers<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Cookie<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>cookieJar<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>cookieJar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Surge-Skip-Scripting&quot;</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$httpClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span>s<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>body<span class="token operator">=</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span>statusCode<span class="token operator">=</span>s<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token operator">=</span>t<span class="token punctuation">.</span>opts<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">hints</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$task<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">got</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;redirect&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;set-cookie&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> s<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;set-cookie&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token punctuation">.</span>Cookie<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">.</span><span class="token function">setCookieSync</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span>cookieJar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">response</span><span class="token operator">:</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>i<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">post</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>body<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Surge-Skip-Scripting&quot;</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$httpClient<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span>s<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>body<span class="token operator">=</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span>statusCode<span class="token operator">=</span>s<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>method<span class="token operator">=</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token operator">=</span>t<span class="token punctuation">.</span>opts<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">hints</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$task<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token operator">...</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">response</span><span class="token operator">:</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>i<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string-property property">&quot;M+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string-property property">&quot;d+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;H+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;m+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;s+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;q+&quot;</span><span class="token operator">:</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">S</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(y+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">-</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> s <span class="token keyword">in</span> e<span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span><span class="token operator">+</span>s<span class="token operator">+</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">==</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length<span class="token operator">?</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token string">&quot;00&quot;</span><span class="token operator">+</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token operator">+</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token punctuation">}</span><span class="token function">msg</span><span class="token punctuation">(</span>e<span class="token operator">=</span>t<span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> <span class="token function-variable function">o</span><span class="token operator">=</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>t<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">{</span><span class="token string-property property">&quot;open-url&quot;</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;object&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">.</span>openUrl<span class="token operator">||</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token operator">=</span>t<span class="token punctuation">.</span>mediaUrl<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;media-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token literal-property property">openUrl</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token literal-property property">mediaUrl</span><span class="token operator">:</span>s<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token operator">||</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">.</span>openUrl<span class="token punctuation">,</span>s<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token string">&quot;media-url&quot;</span><span class="token punctuation">]</span><span class="token operator">||</span>t<span class="token punctuation">.</span>mediaUrl<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token string-property property">&quot;open-url&quot;</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token string-property property">&quot;media-url&quot;</span><span class="token operator">:</span>s<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">.</span>openUrl<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isMute<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$notification<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token function">o</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">$notify</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token function">o</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> h<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;==============\\ud83d\\udce3\\u7cfb\\u7edf\\u901a\\u77e5\\ud83d\\udce3==============&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">&amp;&amp;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token punctuation">,</span><span class="token operator">...</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logSeparator<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">logErr</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> s<span class="token operator">=</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u2757\\ufe0f</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u9519\\u8bef!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>stack<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u2757\\ufe0f</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u9519\\u8bef!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token punctuation">(</span>e<span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1e3</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\ud83d\\udd14</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u7ed3\\u675f! \\ud83d\\udd5b </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>s<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \\u79d2</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">$done</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>完整版本</li></ul><p><code>$.msg($.name, message);</code> 表示调用系统通知（脚本名，消息）</p><p>message += <code>这是第1个数据\\n</code></p><p><code>+=</code> 表示消息累加 <code>\\n</code> 表示换行</p><details class="custom-container details"><summary>点击查看 完整版本代码</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*
这里是注释

这里是cron表达式
cron 0 8 * * * jbm.js
*/</span>

<span class="token comment">//这里设定脚本名</span>
<span class="token keyword">const</span> $ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Env</span><span class="token punctuation">(</span><span class="token string">&quot;这里填脚本名或其他&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//这里是调取青龙通知</span>
<span class="token keyword">const</span> notify <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./sendNotify&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> notifyFlag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//0为关闭通知，1为打开通知,默认为1</span>
<span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token comment">//块作用域定义message变量</span>


<span class="token comment">//async 异步函数 常与await和function一起用</span>
<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  
  
	<span class="token keyword">await</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//等待表达式 check只是演示 可以自己根据需求更改</span>
  
  
  <span class="token comment">//通知体</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>notifyFlag <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		$<span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>name<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">await</span> notify<span class="token punctuation">.</span><span class="token function">sendNotify</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>name<span class="token punctuation">,</span> message<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>


<span class="token comment">//以下3个是async函数的完整体 不要改</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token comment">//function函数 找到你想要的数据</span>
<span class="token keyword">function</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
  message <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">这是第1个数据\\n</span><span class="token template-punctuation string">\`</span></span>
  message <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">这是第2个数据\\n</span><span class="token template-punctuation string">\`</span></span>
    
<span class="token punctuation">}</span>



<span class="token comment">//固定模板 不要动</span>
<span class="token keyword">function</span> <span class="token function">Env</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> process<span class="token operator">&amp;&amp;</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;GITHUB&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">s</span><span class="token punctuation">{</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token operator">=</span>t<span class="token punctuation">}</span><span class="token function">send</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span><span class="token string">&quot;string&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">?</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span>t<span class="token punctuation">;</span><span class="token keyword">let</span> s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>get<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">&quot;POST&quot;</span><span class="token operator">===</span>e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>post<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">s</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>t<span class="token operator">?</span><span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>env<span class="token punctuation">,</span>t<span class="token punctuation">,</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">class</span><span class="token punctuation">{</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">s</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token operator">=</span><span class="token string">&quot;box.dat&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isMute<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logSeparator<span class="token operator">=</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>startTime<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\ud83d\\udd14</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u5f00\\u59cb!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> module<span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token operator">!</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">}</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $task<span class="token punctuation">}</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $httpClient<span class="token operator">&amp;&amp;</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> $loon<span class="token punctuation">}</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">!=</span><span class="token keyword">typeof</span> $loon<span class="token punctuation">}</span><span class="token function">toObj</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">toStr</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">getjson</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> s<span class="token operator">=</span>e<span class="token punctuation">;</span><span class="token keyword">const</span> i<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span>s<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">return</span> s<span class="token punctuation">}</span><span class="token function">setjson</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setdata</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">getScript</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">runScript</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token string">&quot;@chavy_boxjs_userCfgs.httpapi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">=</span>i<span class="token operator">?</span>i<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>i<span class="token punctuation">;</span><span class="token keyword">let</span> r<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token string">&quot;@chavy_boxjs_userCfgs.httpapi_timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>r<span class="token operator">=</span>r<span class="token operator">?</span><span class="token number">1</span><span class="token operator">*</span>r<span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>r<span class="token operator">=</span>e<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span>timeout<span class="token operator">?</span>e<span class="token punctuation">.</span>timeout<span class="token operator">:</span>r<span class="token punctuation">;</span><span class="token keyword">const</span><span class="token punctuation">[</span>o<span class="token punctuation">,</span>h<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>h<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/v1/scripting/evaluate</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">script_text</span><span class="token operator">:</span>t<span class="token punctuation">,</span><span class="token literal-property property">mock_type</span><span class="token operator">:</span><span class="token string">&quot;cron&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">timeout</span><span class="token operator">:</span>r<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Key&quot;</span><span class="token operator">:</span>o<span class="token punctuation">,</span><span class="token literal-property property">Accept</span><span class="token operator">:</span><span class="token string">&quot;*/*&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">s</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>i<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">{</span><span class="token keyword">const</span> i<span class="token operator">=</span>s<span class="token operator">?</span>t<span class="token operator">:</span>e<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">writedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>dataFile<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token operator">!</span>s<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">:</span>i<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">lodash_get</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>s</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> i<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[(\\d+)\\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;.$1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> r<span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> t <span class="token keyword">of</span> i<span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token function">Object</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>r<span class="token punctuation">)</span><span class="token keyword">return</span> s<span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token punctuation">}</span><span class="token function">lodash_set</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>s</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">Object</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">!==</span>t<span class="token operator">?</span>t<span class="token operator">:</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>e<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^.[\\]]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">Object</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">===</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">?</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span>t<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">0</span><span class="token operator">==</span><span class="token operator">+</span>e<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">[</span>e<span class="token punctuation">[</span>e<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getdata</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@(.*?)\\.(.*?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>e<span class="token operator">=</span>t<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token function">setdata</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> s<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">[</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>r<span class="token punctuation">]</span><span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@(.*?)\\.(.*?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getval</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>h<span class="token operator">=</span>i<span class="token operator">?</span><span class="token string">&quot;null&quot;</span><span class="token operator">===</span>o<span class="token operator">?</span><span class="token keyword">null</span><span class="token operator">:</span>o<span class="token operator">||</span><span class="token string">&quot;{}&quot;</span><span class="token operator">:</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">const</span> e<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_set</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>r<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> o<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lodash_set</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>r<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> s<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setval</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> s<span class="token punctuation">}</span><span class="token function">getval</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$persistentStore<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$prefs<span class="token punctuation">.</span><span class="token function">valueForKey</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">||</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token function">setval</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$persistentStore<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$prefs<span class="token punctuation">.</span><span class="token function">setValueForKey</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loaddata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">writedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">||</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;got&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token operator">:</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;tough-cookie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>cktough<span class="token punctuation">.</span>CookieJar</span><span class="token punctuation">,</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">?</span>t<span class="token punctuation">.</span>headers<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Cookie<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>cookieJar<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>cookieJar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Surge-Skip-Scripting&quot;</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$httpClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span>s<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>body<span class="token operator">=</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span>statusCode<span class="token operator">=</span>s<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token operator">=</span>t<span class="token punctuation">.</span>opts<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">hints</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$task<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">got</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;redirect&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;set-cookie&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> s<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;set-cookie&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cktough<span class="token punctuation">.</span>Cookie<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">.</span><span class="token function">setCookieSync</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span>cookieJar<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>ckjar<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">logErr</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">response</span><span class="token operator">:</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>i<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">post</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>body<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>headers<span class="token operator">&amp;&amp;</span><span class="token keyword">delete</span> t<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token operator">=</span>t<span class="token punctuation">.</span>headers<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>headers<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;X-Surge-Skip-Scripting&quot;</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$httpClient<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span>s<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>body<span class="token operator">=</span>i<span class="token punctuation">,</span>s<span class="token punctuation">.</span>statusCode<span class="token operator">=</span>s<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>method<span class="token operator">=</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>isNeedRewrite<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token operator">=</span>t<span class="token punctuation">.</span>opts<span class="token operator">||</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">hints</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$task<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initGotEnv</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token operator">...</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>got<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">status</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">statusCode</span><span class="token operator">:</span>i<span class="token punctuation">,</span><span class="token literal-property property">headers</span><span class="token operator">:</span>r<span class="token punctuation">,</span><span class="token literal-property property">body</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">const</span><span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span>s<span class="token punctuation">,</span><span class="token literal-property property">response</span><span class="token operator">:</span>i<span class="token punctuation">}</span><span class="token operator">=</span>t<span class="token punctuation">;</span><span class="token function">e</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>i<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string-property property">&quot;M+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string-property property">&quot;d+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;H+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;m+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;s+&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;q+&quot;</span><span class="token operator">:</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">S</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(y+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">-</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> s <span class="token keyword">in</span> e<span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span><span class="token operator">+</span>s<span class="token operator">+</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">==</span>RegExp<span class="token punctuation">.</span>$1<span class="token punctuation">.</span>length<span class="token operator">?</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token string">&quot;00&quot;</span><span class="token operator">+</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token operator">+</span>e<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token punctuation">}</span><span class="token function">msg</span><span class="token punctuation">(</span>e<span class="token operator">=</span>t<span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> <span class="token function-variable function">o</span><span class="token operator">=</span><span class="token parameter">t</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>t<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">{</span><span class="token string-property property">&quot;open-url&quot;</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;object&quot;</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">.</span>openUrl<span class="token operator">||</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token operator">=</span>t<span class="token punctuation">.</span>mediaUrl<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;media-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token literal-property property">openUrl</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token literal-property property">mediaUrl</span><span class="token operator">:</span>s<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token operator">||</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">.</span>openUrl<span class="token punctuation">,</span>s<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token string">&quot;media-url&quot;</span><span class="token punctuation">]</span><span class="token operator">||</span>t<span class="token punctuation">.</span>mediaUrl<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token string-property property">&quot;open-url&quot;</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token string-property property">&quot;media-url&quot;</span><span class="token operator">:</span>s<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> e<span class="token operator">=</span>t<span class="token punctuation">.</span>url<span class="token operator">||</span>t<span class="token punctuation">.</span>openUrl<span class="token operator">||</span>t<span class="token punctuation">[</span><span class="token string">&quot;open-url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>isMute<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span>$notification<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token function">o</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">$notify</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token function">o</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> h<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;==============\\ud83d\\udce3\\u7cfb\\u7edf\\u901a\\u77e5\\ud83d\\udce3==============&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">&amp;&amp;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">&amp;&amp;</span>h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>logs<span class="token punctuation">,</span><span class="token operator">...</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logSeparator<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">logErr</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> s<span class="token operator">=</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>s<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u2757\\ufe0f</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u9519\\u8bef!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>stack<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u2757\\ufe0f</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u9519\\u8bef!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> e<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token punctuation">(</span>e<span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1e3</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\ud83d\\udd14</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, \\u7ed3\\u675f! \\ud83d\\udd5b </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>s<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \\u79d2</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSurge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isQuanX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLoon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">$done</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><h4 id="_1-拉不了库" tabindex="-1"><a class="header-anchor" href="#_1-拉不了库" aria-hidden="true">#</a> 1.拉不了库</h4><p>要么是库的问题，要么是代理的问题，github被墙很正常</p><p>解决：手动下载-上传-然后解压到 <code>/root/ql/repo</code> 或 <code>SSH下载</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#ssh下载</span>
<span class="token builtin class-name">cd</span> /roott/ql/repo

<span class="token comment">#下载并解压</span>
<span class="token function">wget</span> https://codeload.github.com/shufflewzc/faker3/zip/refs/heads/main.zip <span class="token operator">&amp;&amp;</span> <span class="token function">unzip</span> main.zip

<span class="token comment">#改名</span>
<span class="token function">mv</span> main shufflewzc_faker3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-忘记青龙面板密码" tabindex="-1"><a class="header-anchor" href="#_2-忘记青龙面板密码" aria-hidden="true">#</a> 2.忘记青龙面板密码</h4><p>若密码忘了，在终端用代码查看</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p>password是密码</p><p>宝塔目录下 <code>root/ql/config/auth.json</code> 也可查看</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /root/ql/config/auth.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,45);function z(G,I){const e=c("ExternalLinkIcon"),t=c("RouterLink");return l(),k("div",null,[C,n("p",null,[s("仓库："),n("a",N,[s("https://github.com/whyour/qinglong"),a(e)])]),n("p",null,[s("镜像："),n("a",E,[s("https://hub.docker.com/r/whyour/qinglong"),a(e)])]),n("p",null,[s("tg群："),n("a",O,[s("https://t.me/jiao_long"),a(e)])]),J,n("ul",null,[n("li",null,[n("p",null,[a(t,{to:"/website/ECS/"},{default:p(()=>[s("服务器")]),_:1})])]),n("li",null,[n("p",null,[a(t,{to:"/website/Xshell/"},{default:p(()=>[s("XShell工具")]),_:1})])]),n("li",null,[n("p",null,[a(t,{to:"/website/docker/"},{default:p(()=>[s("安装docker")]),_:1})])])]),F,n("div",D,[L,X,n("p",null,[a(t,{to:"/website/ECS/#%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E5%8F%8A%E5%BC%80%E6%94%BE%E7%AB%AF%E5%8F%A3"},{default:p(()=>[s("服务器也要放行，在安全组/防火墙里")]),_:1})])]),T,n("div",R,[P,n("p",null,[s("比如："),n("a",Q,[s("http://192.168.1.1:5700"),a(e)])])]),M,n("div",A,[U,n("p",null,[a(t,{to:"/mobile/capture/#_2-%E4%BD%BF%E7%94%A8"},{default:p(()=>[s("手机抓CK的教程")]),_:1})]),B]),K])}const H=u($,[["render",z],["__file","index.html.vue"]]);export{H as default};
